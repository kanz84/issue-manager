version: "3.3"

services:
  db:
    image: postgres:12.7
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_USER=issue_manager
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=issue_manager
      - POSTGRES_DATA=${POSTGRES_DATA}
    networks:
      - default

  django:
    build: .
    expose:
      - 8000
    command: >
      sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:8000 issuetracker.wsgi"
    depends_on:
      - db
    volumes:
      - static_files:/static
      - media_files:/media
      - logs_files:/logs_files
    environment:
      - STATIC_FILES=${STATIC_FILES}
      - MEDIA_FILES=${MEDIA_FILES}
      - LOGS_FILES=${LOGS_FILES}
    networks:
      - default

  issue_mgr_nginx:
    image: nginx:1.19.8-alpine
    depends_on:
      - django
    ports:
      - "8081:8081"
    volumes:
      - static_files:/var/www/html/static
      - media_files:/var/www/html/media
      - ./nginx-conf.d/:/etc/nginx/conf.d
    networks:
      - default
      - gateway_xnetwork


volumes:
  pgdata:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: ${POSTGRES_DATA}
  static_files:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: ${STATIC_FILES}
  media_files:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: ${MEDIA_FILES}
  logs_files:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: ${LOGS_FILES}


networks:
  default:
    driver: bridge
  gateway_xnetwork:
    external: true